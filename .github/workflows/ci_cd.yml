# .github/workflows/ci-cd-pipeline.yml

name: CI/CD Pipeline

on:
  push:
    branches:
      - main
      - develop
  pull_request:
    branches:
      - main
      - develop

jobs:
  build_and_test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python 3.12
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r api/requirements.txt # Assurez-vous que api/requirements.txt est correct

      - name: Run Python tests
        run: |
          pip install pytest
          pytest tests/ # Exécute pytest en ciblant le dossier tests/ pour s'assurer qu'il trouve les tests

      - name: Build and Tag API Docker Image
        # Cette étape construit l'image avec un tag générique ou directement avec le nom Docker Hub si sur main
        run: |
          IMAGE_NAME="${{ secrets.DOCKERHUB_USERNAME }}/house_price_prediction"
          TAG="latest" # Ou utilisez github.sha si vous voulez un tag unique pour chaque commit

          # Construire l'image Docker
          docker build -t "$IMAGE_NAME:$TAG" -f api/Dockerfile .
          
          # Pour les branches de développement, on peut aussi garder un tag local simple si on ne veut pas pousser
          # docker build -t house-price-api-local -f api/Dockerfile .
          # Cette approche simplifie le workflow en évitant le retag ultérieur si c'est seulement pour le push.

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install frontend dependencies
        run: |
          cd frontend
          npm install

      - name: Build frontend
        run: |
          cd frontend
          npm run build
        env:
          CI: true

      # --- Déploiement et Push Docker Hub (Conditions Spécifiques) ---

      - name: Log in to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Push Docker image to Docker Hub
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        run: |
          IMAGE_NAME="${{ secrets.DOCKERHUB_USERNAME }}/house_price_prediction"
          TAG="latest"
          docker push "$IMAGE_NAME:$TAG"

      - name: Deploy to staging (example)
        if: github.ref == 'refs/heads/develop'
        run: echo "Déploiement sur l'environnement de staging..."
        # Ajoutez ici vos commandes de déploiement pour le staging si vous en avez
        # Par exemple, connexion à un serveur de staging et exécution de commandes Docker